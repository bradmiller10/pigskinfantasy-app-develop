name: Send build to Expo

on:
  push:
    branches:
      - develop
      - staging
jobs:
  publish:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Set Environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "ENV=staging" >> $GITHUB_ENV
          else
            echo "ENV=dev" >> $GITHUB_ENV
          fi
          echo "EXPO_APPLE_PASSWORD=${{ secrets.APPLE_PASSWORD }}" >> $GITHUB_ENV

      - uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: expo/expo-github-action@v6
        with:
          expo-version: 4.x
          username: ${{ secrets.EXPO_USERNAME }}
          password: ${{ secrets.EXPO_PASSWORD }}

      - run: npm install

      - name: Build iOS
        run: EXPO_APPLE_PASSWORD=${{ secrets.APPLE_PASSWORD }} expo build:ios -t archive --no-wait --apple-id ${{ secrets.APPLE_USERNAME }} --apple-team-id ${{ secrets.APPLE_TEAMID }} --release-channel=${{ env.ENV }}

      - name: Build Android
        run: expo build:android -t app-bundle --no-wait --release-channel=${{ env.ENV }}

      - name: Notify
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\": \"C011W68DXMY\", \"username\": \"ron\", \"text\": \":tada: *Builds Queued!*\n>*Release Channel*: <https://expo.io/@driveavva/driveavva?release-channel=${{ env.ENV }}|${{ env.ENV }}>\n>*Project*: <https://github.com/${{ github.repository }}|${{ github.repository }}>\n>*Commit Message*: ${{ github.event.commits[0].message }}\" }'

      - name: Notify Fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\": \"C011W68DXMY\", \"username\": \"ron\", \"text\": \":boom: *Deployment Failed! - <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Troubleshoot>*\n>*Release Channel*: <https://expo.io/@driveavva/driveavva?release-channel=${{ env.ENV }}|${{ env.ENV }}>\n>*Project*: <https://github.com/${{ github.repository }}|${{ github.repository }}>\n>*Commit Message*: ${{ github.event.commits[0].message }}\" }'
